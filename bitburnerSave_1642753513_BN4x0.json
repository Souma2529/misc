{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":375,\"hp\":10,\"max_hp\":10,\"strength\":1,\"defense\":1,\"dexterity\":1,\"agility\":1,\"charisma\":1,\"intelligence\":0,\"hacking_chance_mult\":1.2301799999999998,\"hacking_speed_mult\":1.2431917896,\"hacking_money_mult\":1.1716,\"hacking_grow_mult\":1.1716,\"hacking_exp\":2336142.302273508,\"strength_exp\":0,\"defense_exp\":0,\"dexterity_exp\":0,\"agility_exp\":0,\"charisma_exp\":0,\"intelligence_exp\":0,\"hacking_mult\":1.3950241200000002,\"strength_mult\":1.1716,\"defense_mult\":1.1716,\"dexterity_mult\":1.1716,\"agility_mult\":1.1716,\"charisma_mult\":1.1716,\"hacking_exp_mult\":1.414707,\"strength_exp_mult\":1.1716,\"defense_exp_mult\":1.1716,\"dexterity_exp_mult\":1.1716,\"agility_exp_mult\":1.1716,\"charisma_exp_mult\":1.1716,\"company_rep_mult\":1.482074,\"faction_rep_mult\":1.482074,\"money\":1982799941,\"city\":\"Sector-12\",\"location\":\"Travel Agency\",\"jobs\":{},\"companyName\":\"\",\"currentServer\":\"I.I.I.I\",\"purchasedServers\":[\"foo-0\",\"foo-1\",\"foo-2\",\"foo-3\",\"foo-4\",\"foo-5\",\"foo-6\",\"foo-7\",\"foo-8\",\"foo-9\"],\"hacknetNodes\":[],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"CyberSec\",\"Tian Di Hui\",\"NiteSec\",\"The Black Hand\"],\"factionInvitations\":[\"Sector-12\"],\"queuedAugmentations\":[],\"augmentations\":[{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"NeuroFlux Governor\"}],\"sourceFiles\":[{\"lvl\":1,\"n\":1}],\"numPeopleKilled\":0,\"karma\":0,\"crime_money_mult\":1.1716,\"crime_success_mult\":1.1716,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Faction\",\"workCostMult\":3,\"workExpMult\":2,\"currentWorkFactionName\":\"The Black Hand\",\"currentWorkFactionDescription\":\"carrying out hacking contracts\",\"workHackExpGainRate\":0.10610302499999999,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0.32064100961538466,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":15176.934254790232,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":45751.11819472676,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":250,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":28608600,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":72000000,\"work_money_mult\":1.2887600000000001,\"hacknet_node_money_mult\":1.1716,\"hacknet_node_purchase_cost_mult\":0.8316,\"hacknet_node_ram_cost_mult\":0.8316,\"hacknet_node_core_cost_mult\":0.8316,\"hacknet_node_level_cost_mult\":0.8316,\"hasWseAccount\":false,\"hasTixApiAccess\":false,\"has4SData\":false,\"has4SDataTixApi\":false,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":4,\"lastUpdate\":1642753513131,\"totalPlaytime\":792071600,\"playtimeSinceLastAug\":76516800,\"playtimeSinceLastBitnode\":236311200,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":2246650941,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":1982798941,\"work\":0,\"servers\":-202752000,\"other\":-61100000,\"augmentations\":0}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":4426294114.031113,\"hacknet\":5998029.898445291,\"hacknet_expenses\":-2085355.6893467777,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":2065991602.5596573,\"work\":0,\"servers\":-570489047.7236451,\"other\":-62700000,\"augmentations\":-1731026137.925}},\"scriptProdSinceLastAug\":2246650941,\"exploits\":[],\"achievements\":[{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1641969913047},{\"ID\":\"WORKOUT\",\"unlockedOn\":1641992652068},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1641992952046},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1642011509211},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1642019602622},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1642028315816},{\"ID\":\"NS2\",\"unlockedOn\":1642029369307},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1642041161012},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1642063911531},{\"ID\":\"TOR\",\"unlockedOn\":1642106306493},{\"ID\":\"FROZE\",\"unlockedOn\":1642111516796},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1642113360701},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1642114800705},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1642114800707},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1642114800708},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1642146156248},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1642146156258},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1642255680293},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1642380577947},{\"ID\":\"DONATION\",\"unlockedOn\":1642381897941},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1642408906525},{\"ID\":\"TRAVEL\",\"unlockedOn\":1642412506531},{\"ID\":\"NITESEC\",\"unlockedOn\":1642412626533},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1642412626535},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1642455799458},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1642497680568},{\"ID\":\"REPUTATION_10M\",\"unlockedOn\":1642501260297},{\"ID\":\"SF1.1\",\"unlockedOn\":1642517259155}],\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"95.9.0.9\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"fl1ght.exe\",\"BruteSSH.exe\",\"DeepscanV1.exe\",\"FTPCrack.exe\",\"AutoLink.exe\",\"relaySMTP.exe\",\"HTTPWorm.exe\",\"DeepscanV2.exe\",\"relaySMTP.exe-2.2%-INC\",\"ServerProfiler.exe\"],\"ramUsed\":83.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":251094.21336110093,\"onlineMoneyMade\":198950437,\"onlineRunningTime\":75411.40999981017,\"pid\":231,\"ramUsage\":5.5,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":83479}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22357],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571470,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,22357],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571471,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,22357],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571472,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22358],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571521,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,22358],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571522,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,22358],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571523,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22359],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571572,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22359],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571573,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22359],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571574,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22360],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571614,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22360],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571615,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22360],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571616,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22361],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571650,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22361],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571651,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22361],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571652,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22362],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571686,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22362],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571687,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22362],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571688,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22363],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571722,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22363],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571723,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22363],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571724,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22364],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571758,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22364],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571759,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22364],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571760,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22365],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571794,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22365],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571795,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22365],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571796,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22366],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571827,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22366],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571828,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22366],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571829,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22367],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571860,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22367],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571861,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22367],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571862,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22368],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571893,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22368],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571894,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22368],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571895,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22369],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571926,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22369],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571927,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22369],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571928,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22370],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571959,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,22370],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571960,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,22370],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571961,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,22371],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":571992,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,22371],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":571993,\"ramUsage\":1.75,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,22371],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":571994,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = ns.args[0];\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.98;\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tawait ns.hack(target, { threads: 33 });\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"early.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"early.js\",\"url\":\"blob:file:///8db44edf-16d6-41cc-a948-3b585f38e45f\"}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"_hash\":\"c15a21a0daeb11b20bc04971bd23fb9f22cc72ad7f9516fedfb976cce3edf806\",\"moduleSequenceNumber\":83083,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// Defines the \\\"target server\\\", which is the server\\r\\n// that we're going to hack. In this case, it's \\\"n00dles\\\"\\r\\nvar target = \\\"joesguns\\\";\\r\\n\\r\\n// Defines how much money a server should have before we hack it\\r\\n// In this case, it is set to 75% of the server's max money\\r\\nvar moneyThresh = getServerMaxMoney(target) * 0.80;\\r\\n\\r\\nweaken(target);\\r\\n\\r\\n// Infinite loop that continously hacks/grows/weakens the target server\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(target) < moneyThresh) {\\r\\n\\t\\t// If the server's money is less than our threshold, grow it\\r\\n\\t\\tgrow(target);\\r\\n\\t\\tgetServerSecurityLevel(target);\\r\\n\\t\\tweaken(target);\\r\\n\\t} else {\\r\\n\\t\\t// Otherwise, hack it\\r\\n\\t\\thack(target);\\r\\n\\t\\tgetServerSecurityLevel(target);\\r\\n\\t\\tweaken(target);\\r\\n\\t}\\r\\n}\",\"filename\":\"early.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.3,\"server\":\"home\",\"_hash\":\"eee80f36891a63ecb2be330ba34603d7e715654f08bbef646059208ded3e3c5c\",\"moduleSequenceNumber\":83084,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"var currentServers = getPurchasedServers();\\r\\n\\r\\nfor (var i = 0; i < currentServers.length; ++i) {\\r\\n    var serv = currentServers[i];\\r\\n\\tscriptKill(\\\"early.script\\\", serv);\\r\\n\\tdeleteServer(serv);\\r\\n}\",\"filename\":\"kill-servers.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":7.1,\"server\":\"home\",\"_hash\":\"99f3422df8acd8e0344a40c8b70a4c630e63b45b1cc47d9ff07bdc1a27ad05de\",\"moduleSequenceNumber\":83085,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"while (true) {\\n\\tif (getServerSecurityLevel(\\\"n00dles\\\") > 10) {\\n\\t\\tweaken(\\\"n00dles\\\");\\n\\t}\\n\\telse {\\n\\t\\tgrow(\\\"n00dles\\\");\\n\\t\\thack(\\\"n00dles\\\");\\n\\t}\\n}\",\"filename\":\"early-n00dles.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.1,\"server\":\"home\",\"_hash\":\"7b3c2536f375a2b2957ed561e220fb08c187ab99317b615093d5e12dae93cbad\",\"moduleSequenceNumber\":83086,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// How much RAM each purchased server will have. In this case, it'll\\n// be 512GB.\\nvar ram = 512;\\n\\n// Iterator we'll use for our loop\\nvar i = 0;\\n\\n// Continuously try to purchase servers until we've reached the maximum\\n// amount of servers\\nwhile (i < getPurchasedServerLimit()) {\\n\\t// Check if we have enough money to purchase a server\\n\\tif (getServerMoneyAvailable(\\\"home\\\") > getPurchasedServerCost(ram)) {\\n\\t\\t// If we have enough money, then:\\n\\t\\t//  1. Purchase the server\\n\\t\\t//  2. Copy our hacking script onto the newly-purchased server\\n\\t\\t//  3. Run our hacking script on the newly-purchased server with 3 threads\\n\\t\\t//  4. Increment our iterator to indicate that we've bought a new server\\n\\t\\tvar hostname = purchaseServer(\\\"pserv-\\\" + i, ram);\\n\\t\\tscp(\\\"iron-gym.script\\\", hostname);\\n\\t\\texec(\\\"iron-gym.script\\\", hostname, 213);\\n\\t\\t++i;\\n\\t}\\n}\",\"filename\":\"early-purchase-server-512gb.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":6.15,\"server\":\"home\",\"_hash\":\"05c09ab930069d4af89bd4c4501915dd63b2f13001c90231718feb3ab4f29911\",\"moduleSequenceNumber\":83087,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar hosts = [\\\"foodnstuff\\\", \\\"sigma-cosmetics\\\", \\\"joesguns\\\", \\\"hong-fang-tea\\\", \\\"phantasy\\\",\\n\\t\\t\\\"netlink\\\", \\\"summit-uni\\\", \\\"catalyst\\\", \\\"millenium-fitness\\\", \\\"crush-fitness\\\", \\\"harakiri-sushi\\\",\\n\\t\\t\\\"zer0\\\", \\\"neo-net\\\", \\\"silver-helix\\\", \\\"the-hub\\\", \\\"syscore\\\", \\\"rho-construction\\\", \\\"rothman-uni\\\",\\n\\t\\t\\\"alpha-ent\\\", \\\"aevum-police\\\", \\\"omega-net\\\", \\\"comptek\\\", \\\"johnson-ortho\\\", \\\"nectar-net\\\", \\\"iron-gym\\\", \\\"max-hardware\\\"];\\n\\tvar homeServer = ns.getHostname();\\n\\tvar homeRam = ns.getServerMaxRam(homeServer);\\n\\tvar constantRam = ns.getScriptRam(\\\"/newserver/OP.ns\\\");\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\n\\tvar rhosts = [];\\n\\tfor (let i = 0; i < hosts.length; i++) {\\n\\t\\tif (ns.hasRootAccess(hosts[i]) == true) {\\n\\t\\t\\trhosts.push(hosts[i]);\\n\\t\\t}\\n\\t}\\n\\tns.tprint(rhosts);\\n\\n\\tvar rhostsmps = [];\\n\\tfor (let i = 0; i < rhosts.length; i++) {\\n\\t\\t//prime server, this isn't optimal, need multiple runs for large servers\\n\\t\\tvar maxGrowThreads = Math.floor(0.50 * homeRam / growscriptRam);\\n\\t\\tns.exec('/newserver/grow.js', homeServer, maxGrowThreads, rhosts[i], 0);\\n\\t\\tvar maxWeakenThreads = Math.floor(0.40 * homeRam / weakenscriptRam);\\n\\t\\tns.exec('/newserver/weaken.js', homeServer, maxWeakenThreads, rhosts[i], 0);\\n\\t\\tvar WeakenTime = Math.ceil(ns.getWeakenTime(rhosts[i]) / 1000) * 1000;\\n\\t\\tawait ns.sleep(WeakenTime + 1000);\\n\\t\\t//calculate threads after priming\\n\\t\\tvar hackThreads = Math.floor(0.50 / ns.hackAnalyze(rhosts[i]));\\n\\t\\tvar growThreads = Math.ceil(ns.growthAnalyze(rhosts[i], 4));\\n\\t\\tvar weakenThreads = Math.ceil(((hackThreads * 0.002 * 2) + (growThreads * 0.004 * 2)) / 0.05);\\n\\t\\t//calculate ram and money\\n\\t\\tvar totalRamForRun = (hackscriptRam * hackThreads) + (growscriptRam * growThreads) + (weakenscriptRam * weakenThreads);\\n\\t\\tvar runs = (0.99 * 1024 * 1024 - constantRam) / totalRamForRun;\\n\\t\\tvar serverMaxMoney = ns.getServerMaxMoney(rhosts[i]);\\n\\t\\tvar mps = 0;\\n\\t\\tmps = (serverMaxMoney * 0.5) * (WeakenTime / (5 * WeakenTime + runs)) / 1000000;\\n\\t\\trhostsmps.push(mps);\\n\\t\\tns.tprint(rhosts[i] + \\\" mps: $\\\" + mps + \\\" mil\\\");\\n\\t}\\n\\tns.tprint(rhostsmps);\\n}\",\"filename\":\"orderedHosts.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"orderedHosts.js\",\"url\":\"blob:file:///67379cd9-fe2f-4f40-bf68-bce35756371b\"}],\"dependents\":[],\"ramUsage\":5.3,\"server\":\"home\",\"_hash\":\"faa8257df8193fe79f6f9e823446827859ffffa754171932bbd6a461d47f193b\",\"moduleSequenceNumber\":83088,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":83119}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":83119,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":83118}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":83118,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":83117}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":83117,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tif (ns.getHostname() !== \\\"home\\\") {\\n\\t\\tthrow new Exception(\\\"Run the script from home\\\");\\n\\t}\\n\\n\\tawait ns.wget(\\n\\t\\t`https://raw.githubusercontent.com/moriakaice/bitburner/master/src/initHacking.ns?ts=${new Date().getTime()}`,\\n\\t\\t\\\"initHacking.ns\\\"\\n\\t);\\n\\tns.spawn(\\\"initHacking.ns\\\", 1);\\n}\",\"filename\":\"start.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"start.ns\",\"url\":\"blob:file:///9a78d757-3642-4611-84a8-d6ce9224f322\"}],\"dependents\":[],\"ramUsage\":3.65,\"server\":\"home\",\"_hash\":\"fa3fd738ec2c853cf6c57bf941aa21ac4704c8626af91ec0d82c905ddcb24342\",\"moduleSequenceNumber\":83092,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"spawn\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: grow on ${target} in ${threads} threads`)\\n  await ns.grow(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"grow.ns\",\"url\":\"blob:file:///1729014b-8079-46fb-9506-cd8e3cf41d13\"}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"515f19734c4b9272c9618ff0aaf74ab85fd90117e5312cd24a79313f80ba8183\",\"moduleSequenceNumber\":83093,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: hack on ${target} in ${threads} threads`)\\n  await ns.hack(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"_hash\":\"67fe4507dfd98b652068f0925bd4d098b8d2d21defaecf1e28ac3ff3ec9e37b7\",\"moduleSequenceNumber\":83094,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n  const target = ns.args[0]\\n  const threads = ns.args[1]\\n  const delay = ns.args[2]\\n\\n  if (delay && delay > 0) {\\n    await ns.sleep(delay)\\n  }\\n\\n  ns.print(`Starting operation: weaken on ${target} in ${threads} threads`)\\n  await ns.weaken(target, { threads, stock: true })\\n  ns.exit()\\n}\\n\",\"filename\":\"weaken.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"weaken.ns\",\"url\":\"blob:file:///d8540e06-9891-40e3-8a32-f244548188ed\"}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"1d24f2f70130ee8da39ec0ec86a786bc27ef5b4da65e0b3fff064f5a3e6d47ff\",\"moduleSequenceNumber\":83095,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const settings = {\\n  keys: {\\n    serverMap: 'BB_SERVER_MAP',\\n  },\\n}\\n\\nfunction getItem(key) {\\n  let item = localStorage.getItem(key)\\n\\n  return item ? JSON.parse(item) : undefined\\n}\\n\\nfunction localeHHMMSS(ms = 0) {\\n  if (!ms) {\\n    ms = new Date().getTime()\\n  }\\n\\n  return new Date(ms).toLocaleTimeString()\\n}\\n\\nfunction printPathToServer(servers, serverToFind) {\\n  if (serverToFind === 'home') return 'home'\\n  if (!servers[serverToFind]) return `-- Unable to locate ${serverToFind} --`\\n\\n  const jumps = []\\n\\n  let isParentHome = servers.parent === 'home'\\n  let currentServer = serverToFind\\n\\n  while (!isParentHome) {\\n    jumps.push(servers[currentServer].parent)\\n\\n    if (servers[currentServer].parent !== 'home') {\\n      currentServer = servers[currentServer].parent\\n    } else {\\n      isParentHome = true\\n    }\\n  }\\n\\n  jumps.unshift(serverToFind)\\n\\n  return jumps.reverse().join('; connect ')\\n}\\n\\nexport async function main(ns) {\\n  ns.tprint(`[${localeHHMMSS()}] Starting find.ns`)\\n\\n  const serverToFind = ns.args[0]\\n\\n  let hostname = ns.getHostname()\\n\\n  if (hostname !== 'home') {\\n    throw new Exception('Run the script from home')\\n  }\\n\\n  const serverMap = getItem(settings.keys.serverMap)\\n\\n  if (serverToFind) {\\n    if (Object.keys(serverMap.servers).includes(serverToFind)) {\\n      ns.tprint(`[${localeHHMMSS()}] Path to ${serverToFind} found:`)\\n      ns.tprint(printPathToServer(serverMap.servers, serverToFind))\\n    } else {\\n      ns.tprint(`[${localeHHMMSS()}] Unable to find the path to ${serverToFind}`)\\n    }\\n  } else {\\n    ns.tprint(`[${localeHHMMSS()}] Common servers:`)\\n    ns.tprint(`* CSEC (CyberSec faction)`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'CSEC') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`* avmnite-02h (NiteSec faction)`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'avmnite-02h') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`* I.I.I.I (The Black Hand faction)`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'I.I.I.I') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`* run4theh111z (Bitrunners faction)`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'run4theh111z') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`* w0r1d_d43m0n`)\\n    ns.tprint(printPathToServer(serverMap.servers, 'w0r1d_d43m0n') + '; hack;')\\n    ns.tprint('')\\n    ns.tprint(`[${localeHHMMSS()}] Looking for servers with coding contracts:`)\\n    Object.keys(serverMap.servers).forEach((hostname) => {\\n      const files = ns.ls(hostname)\\n      if (files && files.length) {\\n        const contract = files.find((file) => file.includes('.cct'))\\n\\n        if (!!contract) {\\n          ns.tprint('')\\n          ns.tprint(`* ${hostname} has a coding contract(s)! Connect using:`)\\n          ns.tprint(printPathToServer(serverMap.servers, hostname) + `; run ${contract};`)\\n        }\\n      }\\n    })\\n    ns.tprint('')\\n    ns.tprint('Buy all hacks command:')\\n    ns.tprint('home; connect darkweb; buy BruteSSH.exe; buy FTPCrack.exe; buy relaySMTP.exe; buy HTTPWorm.exe; buy SQLInject.exe; home;')\\n    ns.tprint('')\\n  }\\n}\\n\",\"filename\":\"find.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.85,\"server\":\"home\",\"_hash\":\"d98ff66c70334d13cae6575b9ef951ddebacc6a048b5e48928c12aafb090a2cb\",\"moduleSequenceNumber\":83096,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar money = ns.args[1];\\n\\tvar threads = ns.hackAnalyzeThreads(server, money);\\n\\tns.tprint(threads);\\n}\",\"filename\":\"hackAnalyze.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"hackAnalyze.js\",\"url\":\"blob:file:///408484af-718d-4168-bde1-6da6408b90ed\"}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"_hash\":\"569d8d0bbc42265002db2581d7a2277ab03a85b93a0faa934d9308f1d5a49ea8\",\"moduleSequenceNumber\":83097,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hackAnalyzeThreads\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"while (true) {\\r\\n\\thack(\\\"foodnstuff\\\")\\r\\n}\",\"filename\":\"hack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"_hash\":\"840d15484bbb1bea4d23648efdd84ccafb60dd4db5b344a67ad1ba420cc71fb1\",\"moduleSequenceNumber\":83098,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"purchaseServer(\\\"foo-0\\\", 256);\\r\\nscp([\\\"/newserver/start.js\\\", \\\"/newserver/hack.js\\\", \\\"/newserver/grow.js\\\", \\\"/newserver/weaken.js\\\"], \\\"foo-0\\\");\",\"filename\":\"buy-server.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.45,\"server\":\"home\",\"_hash\":\"afecc42547d318002283c42ded56f625b8a84d2917ab8c6d01e127f3f6921bf6\",\"moduleSequenceNumber\":83099,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar target = \\\"foodnstuff\\\";\\n\\tvar moneyThresh = ns.getServerMaxMoney(target) * 0.98;\\n\\tvar securityThresh = ns.getServerMinSecurityLevel(target) + 5;\\n\\twhile (true) {\\n\\t\\tif (ns.getServerSecurityLevel(target) > securityThresh) {\\n\\t\\t\\tawait ns.weaken(target);\\n\\t\\t} else if (ns.getServerMoneyAvailable(target) < moneyThresh) {\\n\\t\\t\\tawait ns.grow(target);\\n\\t\\t} else {\\n\\t\\t\\tawait ns.hack(target, { threads: 128 });\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"early-foodnstuff-8TB.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"_hash\":\"5ca2c4135ad877bba4ca5f06a6bbe7bf1db7b610e45a06f677834f130275eb88\",\"moduleSequenceNumber\":83100,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar contstantRam = ns.getScriptRam(\\\"/newserver/OP.js\\\");\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - contstantRam;\\n\\tvar ms = ns.getServerMinSecurityLevel(hackServer);\\n\\tvar cs = ns.getServerSecurityLevel(hackServer);\\n\\tvar ma = ns.getServerMoneyAvailable(hackServer);\\n\\tvar mm = ns.getServerMaxMoney(hackServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\t//prime the server\\n\\twhile (ma < mm) {\\n\\t\\tvar maxGrowThreads = Math.floor(0.90 * maxRam / growscriptRam);\\n\\t\\tns.exec('/newserver/grow.js', hostServer, maxGrowThreads, hackServer, 0);\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tawait ns.sleep(GrowTime + 1000);\\n\\t\\tcs = ns.getServerSecurityLevel(hackServer);\\n\\t\\tma = ns.getServerMoneyAvailable(hackServer);\\n\\t}\\n\\twhile (cs > ms) {\\n\\t\\tvar maxWeakenThreads = Math.floor(0.90 * maxRam / weakenscriptRam);\\n\\t\\tns.exec('/newserver/weaken.js', hostServer, maxWeakenThreads, hackServer, 0);\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\tawait ns.sleep(WeakenTime + 1000);\\n\\t\\tcs = ns.getServerSecurityLevel(hackServer);\\n\\t}\\n\\t//thread calculations\\n\\tvar hackThreads = Math.floor(0.50 / ns.hackAnalyze(hackServer)); //hack 50% of the money available\\n\\t//initial hack to calculate correct grow threads\\n\\tns.exec('/newserver/hack.js', hostServer, hackThreads, hackServer, 0);\\n\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\tawait ns.sleep(HackTime + 1000);\\n\\tvar growThreads = Math.ceil(ns.growthAnalyze(hackServer, 4)); //number of threads needed to increase the money available by the specified multiplicative factor\\n\\tvar weakenThreads = Math.ceil(((hackThreads * 0.002 * 2) + (growThreads * 0.004 * 2)) / 0.05); //number of threads to undo the hack and grow threads security increase\\n\\t//prime the server\\n\\tns.exec('/newserver/grow.js', hostServer, growThreads, hackServer, 0);\\n\\tns.exec('/newserver/weaken.js', hostServer, weakenThreads, hackServer, 0);\\n\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\tawait ns.sleep(WeakenTime + 1000);\\n\\t//ram per run\\n\\tvar totalRamPerRun = (hackscriptRam * hackThreads) + (growscriptRam * growThreads) + (weakenscriptRam * weakenThreads);\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate sleeps\\n\\t\\tvar runSleep = 230;\\n\\t\\tvar wsleep = 0; //sleep time for weaken\\n\\t\\tvar gsleep = ((WeakenTime - GrowTime - 30)); //sleep time for grow to beat weaken\\n\\t\\tvar hsleep = ((WeakenTime - HackTime - 60)); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\tvar UsedRam = ns.getServerUsedRam(hostServer);\\n\\t\\tif ((0.95 * maxRam - UsedRam) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, weakenThreads, hackServer, wsleep, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growThreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, hackThreads, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(WeakenTime + 1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/OP.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/newserver/OP.js\",\"url\":\"blob:https://danielyxie.github.io/1326c3a4-97e7-4347-a07d-6a1e33e7bf30\"}],\"dependents\":[],\"ramUsage\":5.7,\"server\":\"home\",\"_hash\":\"8fae53fd0c20b0a9b133231ea7f171806440ab1880f58c678366b1f74224b5dc\",\"moduleSequenceNumber\":83101,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet homeserver = ns.getHostname();\\n\\tlet purchasedServerRam = 1024 * 1024;\\n\\tlet bigboys = [\\\"zer0\\\", \\\"phantasy\\\", \\\"silver-helix\\\", \\\"omega-net\\\", \\\"the-hub\\\", \\\"comptek\\\"]\\n\\tlet i = 0;\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tlet maxGrowThreads = Math.floor(0.9 * ns.getServerMaxRam(homeserver) / growscriptRam);\\n\\tlet grown00dles = Math.ceil(ns.getGrowTime(\\\"n00dles\\\"));\\n\\t//first exp\\n\\tns.exec(\\\"RootAccessor.js\\\", homeserver, 1);\\n\\tawait ns.sleep(2000);\\n\\tns.exec('/newserver/grow.js', homeserver, maxGrowThreads, \\\"n00dles\\\", 0);\\n\\tawait ns.sleep(grown00dles + 2000);\\n\\t//early money\\n\\tns.exec(\\\"RootAccessor.js\\\", homeserver, 1);\\n\\tawait ns.sleep(2000);\\n\\tns.exec(\\\"/newserver/OP.js\\\", homeserver, 1, \\\"harakiri-sushi\\\");\\n\\tawait ns.sleep(2000);\\n\\t//buy servers and start the big boys\\n\\twhile (i < (bigboys.length)) {\\n\\t\\tif (ns.getServerMoneyAvailable(homeserver) > ns.getPurchasedServerCost(purchasedServerRam)) {\\n\\t\\t\\tns.purchaseServer(\\\"foo-\\\" + i, purchasedServerRam)\\n\\t\\t\\tawait ns.scp([\\\"/newserver/OP.js\\\", \\\"/newserver/hack.js\\\", \\\"/newserver/grow.js\\\", \\\"/newserver/weaken.js\\\"], \\\"foo-\\\" + i);\\n\\t\\t\\ti++;\\n\\t\\t\\t//need to manually path to each bigboy or code the tree\\n\\t\\t\\t//ns.connect(\\\"foo-\\\" + i);\\n\\t\\t\\t//ns.exec(\\\"/newserver/OP.js\\\", \\\"foo-0\\\", 1, bigboys[i]);\\n\\t\\t\\t//ns.connect(homeserver);\\n\\t\\t\\tns.exec(\\\"RootAccessor.js\\\", homeserver, 1);\\n\\t\\t}\\n\\t\\tawait ns.sleep(2000);\\n\\t}\\n}\",\"filename\":\"ezstart.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"ezstart.js\",\"url\":\"blob:https://danielyxie.github.io/bc4fb49d-ceaf-403d-9b5b-bb72be1c3842\"}],\"dependents\":[],\"ramUsage\":6.35,\"server\":\"home\",\"_hash\":\"68875ced6201557eb50a3b9cda87eb3bb1f438e59ab6554b91699d3062337105\",\"moduleSequenceNumber\":83102,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport function allServers(ns, removePurchased = true) {\\n\\tif (removePurchased) var pservs = ns.getPurchasedServers();\\n\\tconst nodes = new Set;\\n\\tfunction dfs(node) {\\n\\t\\tnodes.add(node);\\n\\t\\tfor (const neighbor of ns.scan(node)) {\\n\\t\\t\\tif (removePurchased) {\\n\\t\\t\\t\\tif (!pservs.includes(neighbor)) {\\n\\t\\t\\t\\t\\tif (!nodes.has(neighbor)) {\\n\\t\\t\\t\\t\\t\\tdfs(neighbor);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (!nodes.has(neighbor)) {\\n\\t\\t\\t\\t\\tdfs(neighbor);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tdfs(\\\"home\\\");\\n\\treturn [...nodes];\\n}\",\"filename\":\"lib-getServers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"_hash\":\"37cc73aea833a4ac573ec83e43257e4ea804fdc9f110e3638e01d3d4d01b6180\",\"moduleSequenceNumber\":83103,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nimport { allServers } from \\\"./lib-getServers.js\\\";\\n\\nexport async function main(ns) {\\n\\tvar approved = [];\\n\\tvar deniedhack = [];\\n\\tvar deniedports = [];\\n\\tvar denied = [];\\n\\tvar other = [];\\n\\tvar files = [0, 0, 0, 0, 0];\\n\\tvar maxPorts = 0;\\n\\n\\t//suppress all default log messages\\n\\tns.tail(); ns.disableLog('ALL'); ns.clearLog();\\n\\n\\t//check for help argument.\\n\\tif (ns.args.includes(\\\"-h\\\")) { help(ns); return; }\\n\\tns.print(\\\"For script help use argument '-h' \\\");\\n\\n\\tns.print(\\\"Executing...\\\");\\n\\n\\t//process argument calls\\n\\tvar target = [];\\n\\tif (ns.args.length > 0) {\\n\\t\\tif (ns.args[0] === \\\"-s\\\") {\\n\\t\\t\\ttarget = await allServers(ns);\\n\\t\\t} else {\\n\\t\\t\\ttarget = ns.args;\\n\\t\\t}\\n\\t} else {\\n\\t\\ttarget = await allServers(ns);\\n\\t}\\n\\n\\t//check max ports available to open\\n\\tif (ns.fileExists(\\\"BruteSSH.exe\\\")) { files[0] = 1; maxPorts++; ns.print(\\\"BruteSSH.exe file exists\\\"); } else { ns.print(\\\"BruteSSH.exe not found\\\"); }\\n\\tif (ns.fileExists(\\\"FTPCrack.exe\\\")) { files[1] = 1; maxPorts++; ns.print(\\\"FTPCrack.exe file exists\\\"); } else { ns.print(\\\"FTPCrack.exe not found\\\"); }\\n\\tif (ns.fileExists(\\\"relaySMTP.exe\\\")) { files[2] = 1; maxPorts++; ns.print(\\\"relaySMTP.exe file exists\\\"); } else { ns.print(\\\"relaySMTP.exe not found\\\"); }\\n\\tif (ns.fileExists(\\\"HTTPWorm.exe\\\")) { files[3] = 1; maxPorts++; ns.print(\\\"HTTPWorm.exe file exists\\\"); } else { ns.print(\\\"HTTPWorm.exe not found\\\"); }\\n\\tif (ns.fileExists(\\\"SQLInject.exe\\\")) { files[4] = 1; maxPorts++; ns.print(\\\"SQLInject.exe file exists\\\"); } else { ns.print(\\\"SQLInject.exe not found\\\"); }\\n\\tns.print(\\\"Maximum ports able to open: [\\\" + maxPorts + \\\"]\\\\n\\\");\\n\\n\\t//open all ports and attempt root access\\n\\tfor (const n of target) {\\n\\t\\tif (ns.serverExists(n)) {\\n\\t\\t\\tconst serverHackLvl = ns.getServerRequiredHackingLevel(n);\\n\\t\\t\\tconst playerHackingLvl = ns.getHackingLevel();\\n\\n\\t\\t\\tif (playerHackingLvl >= serverHackLvl) {\\n\\t\\t\\t\\tif (files[0]) { ns.brutessh(n); }\\n\\t\\t\\t\\tif (files[1]) { ns.ftpcrack(n); }\\n\\t\\t\\t\\tif (files[2]) { ns.relaysmtp(n); }\\n\\t\\t\\t\\tif (files[3]) { ns.httpworm(n); }\\n\\t\\t\\t\\tif (files[4]) { ns.sqlinject(n); }\\n\\n\\t\\t\\t\\tgainRootAccess(n, maxPorts, approved, deniedports, denied, other, ns);\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdenied.push(n);\\n\\t\\t\\t\\tdeniedhack.push(\\\"[DENIED] - hack level too low [\\\" + playerHackingLvl + '/' + serverHackLvl + \\\"] for \\\" + n);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t//output results\\n\\tif (deniedhack.length > 0) ns.print(deniedhack.join(\\\"\\\\n\\\"));\\n\\tif (deniedports.length > 0) ns.print(deniedports.join(\\\"\\\\n\\\"));\\n\\tif (other.length > 0) ns.print(\\\"[ALREADY ACQUIRED ROOT ACCESS] for \\\" + other.join(\\\"\\\\n[ALREADY ACQUIRED ROOT ACCESS] for \\\"));\\n\\tif (approved.length > 0) ns.print(\\\"[ROOT ACCESS APPROVED] for \\\" + approved.join(\\\"\\\\n[ROOT ACCESS APPROVED] for \\\"));\\n\\n\\tif (ns.args.includes(\\\"-s\\\")) {\\n\\t\\tns.print(\\\"Copiable list of rooted servers:\\\\n\\\" + approved.join(\\\" \\\") + other.join(\\\" \\\"));\\n\\t}\\n}\\n\\nfunction gainRootAccess(server, portCount, approved, deniedports, denied, other, ns) {\\n\\tif (!ns.hasRootAccess(server)) {\\n\\t\\tif (portCount >= ns.getServerNumPortsRequired(server)) {\\n\\t\\t\\tns.nuke(server);\\n\\t\\t\\tapproved.push(server);\\n\\t\\t} else {\\n\\t\\t\\tdenied.push(server);\\n\\t\\t\\tdeniedports.push(\\\"[ROOT ACCESS DENIED] for \\\" + server + \\\" - Not enough open PORTS\\\");\\n\\t\\t}\\n\\t} else {\\n\\t\\tother.push(server);\\n\\t}\\n}\\n\\nfunction help(ns) {\\n\\tconst text = [\\n\\t\\t\\\"<========================HELP=====================>\\\\n\\\",\\n\\t\\t\\\"- Script takes in [N] arguments or none at all.\\\",\\n\\t\\t\\\"  [N]: server names that you wish to be rooted.\\\",\\n\\t\\t\\\"  e.g.: run rootAccessor.ns n00dles joesguns zer0\\\\n\\\",\\n\\t\\t\\\"- No args will attempt root access on all servers\\\\n\\\",\\n\\t\\t\\\"- include argument '-s' as an argument to print\\\",\\n\\t\\t\\\"  copiable list of all rooted servers\\\\n\\\",\\n\\t\\t\\\"<=================================================>\\\"\\n\\t];\\n\\tns.print(text.join(\\\"\\\\n\\\"));\\n}\",\"filename\":\"RootAccessor.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"lib-getServers.js\",\"url\":\"blob:https://danielyxie.github.io/f1943c00-4ccd-4ef3-a35b-49e433b05246\",\"moduleSequenceNumber\":83103},{\"filename\":\"RootAccessor.js\",\"url\":\"blob:https://danielyxie.github.io/6f2a910b-74f2-46d7-93d6-989b47b09399\",\"moduleSequenceNumber\":83115}],\"dependents\":[],\"ramUsage\":4.85,\"server\":\"home\",\"_hash\":\"be2ddcaaf462c0fbd79aa6e75ae20fe42b22ee020e9837092e188af6d740be22\",\"moduleSequenceNumber\":83115,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"serverExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns**/\\nexport async function main(ns) {await ns.grow(ns.args[0])}\",\"filename\":\"/scripts/grow.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"34ab53e2a3bee159c489071e28ab0c3a6509ccc0b5a386074539475b919dd734\",\"moduleSequenceNumber\":83105,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns**/\\nexport async function main(ns) {await ns.weaken(ns.args[0])}\",\"filename\":\"/scripts/weak.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/scripts/weak.ns\",\"url\":\"blob:file:///28b6945c-812a-4a6a-9df0-c0795d73dbe7\"}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"12d77a222b4eb8c38a3438802d5b90d15529f7c191f08c25a7405e686624b507\",\"moduleSequenceNumber\":83106,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns**/\\nexport async function main(ns) {await ns.hack(ns.args[0])}\",\"filename\":\"/scripts/hack.ns\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"_hash\":\"9004138a35aab2de558e914ee54f83fabb7243a7f08431feccb26a948efffd1e\",\"moduleSequenceNumber\":83107,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet homeserver = ns.getHostname();\\n\\t//buy servers and start the big boys\\n\\tlet purchasedServerRam = 1024 * 1024;\\n\\tlet bigboys = [\\\"zer0\\\", \\\"phantasy\\\", \\\"johnson-ortho\\\", \\\"netlink\\\"]\\n\\tlet i = 0;\\n\\twhile (i < bigboys.length) {\\n\\t\\tif (ns.getServerMoneyAvailable(homeserver) > ns.getPurchasedServerCost(purchasedServerRam)) {\\n\\t\\t\\tns.purchaseServer(\\\"goo-\\\" + i, purchasedServerRam)\\n\\t\\t\\tawait ns.scp([\\\"/newserver/OP.js\\\", \\\"/newserver/hack.js\\\", \\\"/newserver/grow.js\\\", \\\"/newserver/weaken.js\\\"], \\\"goo-\\\" + i);\\n\\t\\t\\ti++;\\n\\t\\t\\t//need to manually path to each bigboy or code the tree\\n\\t\\t\\t//ns.connect(\\\"foo-\\\" + i);\\n\\t\\t\\t//ns.exec(\\\"/newserver/OP.js\\\", \\\"foo-0\\\", 1, bigboys[i]);\\n\\t\\t\\t//ns.connect(homeserver);\\n\\t\\t}\\n\\t\\tawait ns.sleep(2000);\\n\\t}\\n}\",\"filename\":\"ezstart-temp.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"ezstart-temp.js\",\"url\":\"blob:file:///653d96ab-0603-4d22-b190-8a817e7b4cf7\"}],\"dependents\":[],\"ramUsage\":4.85,\"server\":\"home\",\"_hash\":\"c8e49c28f5f97596827bfe5180edee5c7db4617f4aa062bb2f4031ce60eed677\",\"moduleSequenceNumber\":83108,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"//Uses a DFS to find the path to the specified server and then prints the path to Terminal.\\r\\ntarget = args[0];\\r\\nvisited = [];\\r\\nstack = [];\\r\\nparentTracker = [];\\r\\norigin = getHostname();\\r\\nstack.push(origin);\\r\\n\\r\\nwhile (stack.length > 0) {\\r\\n\\tnode = stack.pop();\\r\\n\\tprint(\\\"DFS processing server \\\" + node);\\r\\n\\tif (visited.includes(node)) {\\r\\n\\t\\t//Do nothing. Essentially a \\\"continue\\\" but that doesn't exist yet\\r\\n\\t} else {\\r\\n\\t\\tif (node == target) { break; }\\r\\n\\t\\tvisited.push(node);\\r\\n\\t\\tnextNodes = scan(node);\\r\\n\\t\\tfor (i = 0; i < nextNodes.length; ++i) {\\r\\n\\t\\t\\tstack.push(nextNodes[i]);\\r\\n\\t\\t\\t//Keep track of the nodes \\\"parent\\\" so we can re-create the path\\r\\n\\t\\t\\t//Ignore entries that start at the origin\\r\\n\\t\\t\\tif (nextNodes[i] != origin) {\\r\\n\\t\\t\\t\\tpair = [nextNodes[i], node];\\r\\n\\t\\t\\t\\tparentTracker.push(pair);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\nprint(\\\"Target found. About to re-create path\\\");\\r\\nprint(\\\"parentTracker size: \\\" + parentTracker.length);\\r\\npath = [];\\r\\ni = target;\\r\\nwhile (i != getHostname()) {\\r\\n\\tpath.push(i);\\r\\n\\tprint(\\\"Re-creating path at \\\" + i);\\r\\n\\t//Search through the parentTracker array to find this nodes parent\\r\\n\\tfor (j = 0; j < parentTracker.length; ++j) {\\r\\n\\t\\tpair = parentTracker[j];\\r\\n\\t\\tif (pair[0] == i) {\\r\\n\\t\\t\\ti = pair[1];\\r\\n\\t\\t\\tbreak;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\npath.reverse();\\r\\ntprint(path);\",\"filename\":\"DFS.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.85,\"server\":\"home\",\"_hash\":\"1c139130b148ae3f3d9a8b391798ba98cd2ab6712a25688ec8f4b7ec914028d8\",\"moduleSequenceNumber\":83109,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":83942}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"home\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":83942,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar scpfiles = [\\\"/newserver/OP.js\\\", \\\"/newserver/start.js\\\", \\\"/newserver/hack.js\\\", \\\"/newserver/grow.js\\\",\\n\\t\\t\\\"/newserver/weaken.js\\\"];\\n\\tvar servers0port0node = [\\\"foodnstuff\\\", \\\"sigma-cosmetics\\\", \\\"joesguns\\\", \\\"hong-fang-tea\\\", \\\"harakiri-sushi\\\"];\\n\\tvar otherEarlyServers = [\\\"nectar-net\\\", \\\"iron-gym\\\", \\\"max-hardware\\\", \\\"zer0\\\", \\\"neo-net\\\"];\\n\\tns.exec(\\\"RootAccessor.js\\\", ns.getHostname(), 1);\\n\\tawait ns.sleep(1000);\\n\\t//copy early start files\\n\\tvar i = 0;\\n\\twhile (i < servers0port0node.length) {\\n\\t\\tawait ns.scp(scpfiles, servers0port0node[i]);\\n\\t\\ti++;\\n\\t}\\n\\tvar i = 0;\\n\\twhile (i < otherEarlyServers.length) {\\n\\t\\tawait ns.scp(scpfiles, otherEarlyServers[i]);\\n\\t\\ti++;\\n\\t}\\n\\t//run early start files to attack foodnstuff\\n\\tvar i = 0;\\n\\twhile (i < servers0port0node.length) {\\n\\t\\twhile (ns.hasRootAccess(servers0port0node[i]) == false) {\\n\\t\\t\\tawait ns.sleep(10000);\\n\\t\\t\\tns.exec(\\\"RootAccessor.js\\\", ns.getHostname(), 1);\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tns.connect(servers0port0node[i]);\\n\\t\\tns.exec(\\\"/newserver/start.js\\\", servers0port0node[i], 1, \\\"foodnstuff\\\");\\n\\t\\ti++;\\n\\t\\tns.connect(\\\"home\\\");\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n\\t//var i = 0;\\n\\t//while (i < otherEarlyServers.length) {\\n\\t//\\ti++;\\n\\t//\\tawait ns.sleep(1000);\\n\\t//}\\n}\",\"filename\":\"ezstart-stage1.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"ezstart-stage1.js\",\"url\":\"blob:https://danielyxie.github.io/d07b50bb-2abe-4711-8f21-f8f3bfaf3b42\"}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"home\",\"_hash\":\"472635fa55e333c428012b8580898538715892f924ee9854b9f107bec88e44e7\",\"moduleSequenceNumber\":83111,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.grow(\\\"harakiri-sushi\\\");\\n\\t}\\n}\",\"filename\":\"manual.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"manual.js\",\"url\":\"blob:https://danielyxie.github.io/3af6350a-0374-41d9-9db2-54cc13452ad3\",\"moduleSequenceNumber\":3692}],\"dependents\":[],\"ramUsage\":1.9,\"server\":\"home\",\"_hash\":\"a92652f9e62fd971370a042a45ad2497441a9281eef5cfd9657629b4b837fd80\",\"moduleSequenceNumber\":84090,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"tprint(getPurchasedServerCost(args[0]));\\r\\ntprint(\\\"Price per GB: $\\\" + (getPurchasedServerCost(args[0])/args[0]));\",\"filename\":\"temp.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.85,\"server\":\"home\",\"_hash\":\"573a8694923b0417912d075a8d002041a5c7ffda826fbfde422b2527355c0cc7\",\"moduleSequenceNumber\":83113,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ram = 256;\\n\\tvar startfiles = [\\\"/newserver/start.js\\\", \\\"/newserver/hack.js\\\", \\\"/newserver/grow.js\\\", \\\"/newserver/weaken.js\\\"];\\n\\tvar servername = \\\"\\\";\\n\\tns.tprint(\\\"Purchasing servers for $\\\" + (ns.getPurchasedServerCost(ram) / 1000000) + \\\" mil each\\\");\\n\\tvar i = 0;\\n\\twhile (i < ns.getPurchasedServerLimit()) {\\n\\t\\tif (ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(ram)) {\\n\\t\\t\\tservername = ns.purchaseServer(\\\"foo-\\\" + i, ram);\\n\\t\\t\\tawait ns.scp(startfiles, servername);\\n\\t\\t\\tns.exec(\\\"/newserver/start.js\\\", servername, 1, \\\"harakiri-sushi\\\");\\n\\t\\t\\t++i;\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(2000);\\n\\t}\\n}\",\"filename\":\"early-purchase-server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"early-purchase-server.js\",\"url\":\"blob:https://danielyxie.github.io/e8d71fd8-f0ca-4cef-ae54-13637d8c9358\",\"moduleSequenceNumber\":22257}],\"dependents\":[],\"ramUsage\":6.15,\"server\":\"home\",\"_hash\":\"436744ff0f1bd8c3d38afc66bf82e1278341bab296cbe21c22cf70b1376cab2d\",\"moduleSequenceNumber\":88426,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.grow(\\\"harakiri-sushi\\\");\\n\\t}\\n}\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"d0a720840f7ef16bd5460d76bc9f1aedb261402bf5392b4ae46b89cf3467b4de\",\"moduleSequenceNumber\":84130,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t}\\n}\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"home\",\"_hash\":\"e9895aad2280d85c50a1782bf333aef151e06a23234cd5cdc7b59d83eaed1674\",\"moduleSequenceNumber\":84248,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"foo-0\",\"foo-1\",\"foo-2\",\"foo-3\",\"foo-4\",\"foo-5\",\"foo-6\",\"foo-7\",\"foo-8\",\"foo-9\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"93.5.2.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":31635311100.75,\"moneyMax\":118632416627.8125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1348,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"29.8.2.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":41887165728.75,\"moneyMax\":157076871482.8125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1328,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"86.5.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":14913463797,\"moneyMax\":55925489238.75,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":901,\"serverGrowth\":67}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"7.5.4.7\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\",\"ecorp\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":25751115659.25,\"moneyMax\":96566683722.1875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1064,\"serverGrowth\":74}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"41.0.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\",\"megacorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":24329422326.75,\"moneyMax\":91235333725.3125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1066,\"serverGrowth\":82}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"74.1.4.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":15035633151,\"moneyMax\":56383624316.25,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":953,\"serverGrowth\":58}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"15.2.7.9\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":98,\"hackDifficulty\":98,\"minDifficulty\":33,\"moneyAvailable\":16295133254.25,\"moneyMax\":61106749703.4375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":969,\"serverGrowth\":98}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-953149.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[8,8],[2,1,4],[5,8,1,8],[4,8,5,1,5],[1,8,2,7,9,1]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"52.4.0.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"nwo\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":14860031369.25,\"moneyMax\":55725117634.6875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1142,\"serverGrowth\":75}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"15.7.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"helios\",\"b-and-a\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":97,\"minDifficulty\":32,\"moneyAvailable\":18771440384.25,\"moneyMax\":70392901440.9375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1060,\"serverGrowth\":92}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"49.3.1.2\",\"isConnectedTo\":false,\"maxRam\":2048,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\"4sigma\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":1212859391.25,\"moneyMax\":4548222717.1875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1213,\"serverGrowth\":88}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"86.3.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":750000,\"moneyMax\":2812500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1425,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"71.8.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":839389509,\"moneyMax\":3147710658.75,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1052,\"serverGrowth\":72}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"53.5.1.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":645935316.75,\"moneyMax\":2422257437.8125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":948,\"serverGrowth\":50}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"33.1.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":662188030.5,\"moneyMax\":2483205114.375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":906,\"serverGrowth\":55}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"18.1.4.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\",\"omnitek\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":439469499,\"moneyMax\":1648010621.25,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":863,\"serverGrowth\":71}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"32.4.7.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":562750659,\"moneyMax\":2110314971.25,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":847,\"serverGrowth\":77}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-298450-TianDiHui.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[2,4],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"4.3.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":693977850.75,\"moneyMax\":2602416940.3125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":871,\"serverGrowth\":89}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"univ-energy\",\"httpPortOpen\":false,\"ip\":\"40.4.7.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":869898379.5,\"moneyMax\":3262118923.125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":876,\"serverGrowth\":89}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"39.0.8.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"stormtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":619034044.5,\"moneyMax\":2321377666.875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":843,\"serverGrowth\":67}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"91.5.9.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"helios\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":380924605.5,\"moneyMax\":1428467270.625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":814,\"serverGrowth\":74}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"45.2.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":633582414,\"moneyMax\":2375934052.5,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":885,\"serverGrowth\":75}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"43.0.6.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":594261419.25,\"moneyMax\":2228480322.1875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":838,\"serverGrowth\":89}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-244975.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[5,9,9,28,1],[26,46,30,26,47],[2,45,34,42,13],[36,39,47,2,27],[21,23,32,40,6],[2,43,17,17,18],[39,36,19,16,38],[47,19,27,8,28],[47,18,10,15,31],[33,2,20,27,32]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"63.6.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":850230351,\"moneyMax\":3188363816.25,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":904,\"serverGrowth\":65}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-749996-TianDiHui.cct\",\"type\":\"Total Ways to Sum\",\"data\":42,\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"83.8.7.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"global-pharm\",\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":729078165,\"moneyMax\":2734043118.75,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":861,\"serverGrowth\":66}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"33.0.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\",\"titan-labs\",\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":807806964.75,\"moneyMax\":3029276117.8125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":819,\"serverGrowth\":65}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"78.5.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":716858979.75,\"moneyMax\":2688221174.0625,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":816,\"serverGrowth\":70}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"77.4.4.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":613067921.25,\"moneyMax\":2299004704.6875,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":773,\"serverGrowth\":80}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"71.7.3.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":1101253428.75,\"moneyMax\":4129700357.8125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":870,\"serverGrowth\":66}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"global-pharm\",\"httpPortOpen\":false,\"ip\":\"1.0.1.4\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\",\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1306757579.25,\"moneyMax\":4900340922.1875,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":845,\"serverGrowth\":89}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-271901.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"80959\",-8],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"6.6.0.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":844358263.5,\"moneyMax\":3166343488.125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":819,\"serverGrowth\":74}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-958571.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[11,174,177,99,92,7,12,181,28,100,2,18,5,50,142,45,61,167,2,182,33,188,66,101,163,49,185,101],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"49.2.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1069975011.75,\"moneyMax\":4012406294.0625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":848,\"serverGrowth\":78}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"unitalife\",\"httpPortOpen\":false,\"ip\":\"1.1.1.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"snap-fitness\",\"defcomm\",\"icarus\",\"solaris\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":759310965,\"moneyMax\":2847416118.75,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":821,\"serverGrowth\":75}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"42.6.2.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":586126461,\"moneyMax\":2197974228.75,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":711,\"serverGrowth\":64}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"10.2.4.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":422562424.5,\"moneyMax\":1584609091.875,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":509,\"serverGrowth\":53}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"alpha-ent\",\"httpPortOpen\":false,\"ip\":\"77.0.5.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":489049439.25,\"moneyMax\":1833935397.1875,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":541,\"serverGrowth\":50}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aevum-police\",\"httpPortOpen\":false,\"ip\":\"18.4.6.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":76,\"hackDifficulty\":76,\"minDifficulty\":25,\"moneyAvailable\":150689238.75,\"moneyMax\":565084645.3125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":408,\"serverGrowth\":41}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"90.0.9.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":48,\"minDifficulty\":16,\"moneyAvailable\":137485693.5,\"moneyMax\":515571350.625,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":412,\"serverGrowth\":42}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"25.9.8.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":667636176.75,\"moneyMax\":2503635662.8125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":730,\"serverGrowth\":78}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"87.2.7.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"comptek\",\"aevum-police\",\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":54,\"hackDifficulty\":54,\"minDifficulty\":18,\"moneyAvailable\":256763819.25,\"moneyMax\":962864322.1875,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":458,\"serverGrowth\":47}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"syscore\",\"httpPortOpen\":false,\"ip\":\"24.1.5.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"comptek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":439934899.5,\"moneyMax\":1649755873.125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":591,\"serverGrowth\":63}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"55.2.7.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"comptek\",\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":334910217,\"moneyMax\":1255913313.75,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":444,\"serverGrowth\":34}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-525403-NiteSec.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(((a)(((a)((()\",\"reward\":{\"name\":\"NiteSec\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-865638.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":246340222,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"5.7.5.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"zb-institute\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":35,\"hackDifficulty\":35,\"minDifficulty\":12,\"moneyAvailable\":133159748.25,\"moneyMax\":499349055.9375,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":323,\"serverGrowth\":55}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":true,\"ip\":\"13.1.1.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\",\"summit-uni\",\"syscore\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":170294121,\"moneyMax\":638602953.75,\"numOpenPortsRequired\":3,\"openPortCount\":4,\"requiredHackingSkill\":304,\"serverGrowth\":47}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"16.2.6.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":206250000,\"moneyMax\":773437500,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":407,\"serverGrowth\":46}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"67.4.2.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":61642194,\"moneyMax\":231158227.5,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":261,\"serverGrowth\":49}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-215862-CyberSec.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[8,50,29,33,33,21,20,4],[30,17,35,4,49,9,27,40],[41,35,8,46,40,9,3,37],[37,2,6,24,1,11,35,49]],\"reward\":{\"name\":\"CyberSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"40.7.1.7\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ram = 256;\\n\\tvar startfiles = [\\\"/newserver/start.js\\\", \\\"/newserver/hack.js\\\", \\\"/newserver/grow.js\\\", \\\"/newserver/weaken.js\\\"];\\n\\tvar servername = \\\"\\\";\\n\\tns.tprint(\\\"Purchasing servers for $\\\" + (ns.getPurchasedServerCost(ram) / 1000000) + \\\" mil each\\\");\\n\\tvar i = 0;\\n\\twhile (i < ns.getPurchasedServerLimit()) {\\n\\t\\tif (ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(ram)) {\\n\\t\\t\\tservername = ns.purchaseServer(\\\"foo-\\\" + i, ram);\\n\\t\\t\\tawait ns.scp(startfiles, servername);\\n\\t\\t\\tns.exec(\\\"/newserver/start.js\\\", servername, 1, \\\"harakiri-sushi\\\");\\n\\t\\t\\t++i;\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(2000);\\n\\t}\\n}\",\"filename\":\"early-purchase-server.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":6.15,\"server\":\"n00dles\",\"_hash\":\"436744ff0f1bd8c3d38afc66bf82e1278341bab296cbe21c22cf70b1376cab2d\",\"moduleSequenceNumber\":88499,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":52500,\"moneyMax\":196875,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"69.5.5.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,2568,0]},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11800.722182400095,\"onlineMoneyMade\":0,\"onlineRunningTime\":67977.60999993018,\"pid\":12117,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"threads\":6,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:https://danielyxie.github.io/5e07e1ec-3552-493a-bbe8-5eec87d47555\",\"moduleSequenceNumber\":84348}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,0,762]},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3501.616161599982,\"onlineMoneyMade\":0,\"onlineRunningTime\":67973.20999993027,\"pid\":12136,\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:https://danielyxie.github.io/605281ba-e770-4357-9721-e33684e6b731\",\"moduleSequenceNumber\":84349}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.grow(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.sleep(ns.getWeakenTime(\\\"harakiri-sushi\\\") + 1000);\\n\\t}\\n}\",\"filename\":\"manual.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"manual.js\",\"url\":\"blob:https://danielyxie.github.io/f8034085-537a-49b7-8dd9-3ee882a36620\",\"moduleSequenceNumber\":83684}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"foodnstuff\",\"_hash\":\"8582014887ad8bf0420245e210b1b3544bd79cafff003ec7476115e912713dd1\",\"moduleSequenceNumber\":83684,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.grow(\\\"phantasy\\\");\\n\\t}\\n}\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:https://danielyxie.github.io/9c63aa11-3eb8-44eb-a595-2ed5032e9261\",\"moduleSequenceNumber\":89224}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"_hash\":\"6c632f4a06adf2ec99942620c935a7f8a22da00d3781307ddbb19a8d76f6573a\",\"moduleSequenceNumber\":89224,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"phantasy\\\");\\n\\t}\\n}\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:https://danielyxie.github.io/833d3794-c8cb-491f-b92a-426dc61f3aff\",\"moduleSequenceNumber\":89225}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foodnstuff\",\"_hash\":\"0385451a7645093ed36a97c14480296af8d985c10f6a96d5d0c9fda7d9740d09\",\"moduleSequenceNumber\":89225,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":9.029999999999974,\"minDifficulty\":3,\"moneyAvailable\":1508246.654706435,\"moneyMax\":5625000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"71.8.3.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,2568,0]},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":11800.722182400095,\"onlineMoneyMade\":0,\"onlineRunningTime\":67921.00999993128,\"pid\":12329,\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"threads\":6,\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:https://danielyxie.github.io/5e07e1ec-3552-493a-bbe8-5eec87d47555\",\"moduleSequenceNumber\":84350}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"phantasy\":[0,0,0,762]},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3501.616161599982,\"onlineMoneyMade\":0,\"onlineRunningTime\":67900.00999993166,\"pid\":12396,\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"threads\":2,\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:https://danielyxie.github.io/605281ba-e770-4357-9721-e33684e6b731\",\"moduleSequenceNumber\":84351}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.grow(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.sleep(ns.getWeakenTime(\\\"harakiri-sushi\\\") + 1000);\\n\\t}\\n}\",\"filename\":\"manual.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"manual.js\",\"url\":\"blob:https://danielyxie.github.io/f8034085-537a-49b7-8dd9-3ee882a36620\",\"moduleSequenceNumber\":83685}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"sigma-cosmetics\",\"_hash\":\"8582014887ad8bf0420245e210b1b3544bd79cafff003ec7476115e912713dd1\",\"moduleSequenceNumber\":83685,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.grow(\\\"phantasy\\\");\\n\\t}\\n}\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:https://danielyxie.github.io/9c63aa11-3eb8-44eb-a595-2ed5032e9261\",\"moduleSequenceNumber\":89390}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"_hash\":\"6c632f4a06adf2ec99942620c935a7f8a22da00d3781307ddbb19a8d76f6573a\",\"moduleSequenceNumber\":89390,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"phantasy\\\");\\n\\t}\\n}\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:https://danielyxie.github.io/833d3794-c8cb-491f-b92a-426dc61f3aff\",\"moduleSequenceNumber\":89474}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"sigma-cosmetics\",\"_hash\":\"0385451a7645093ed36a97c14480296af8d985c10f6a96d5d0c9fda7d9740d09\",\"moduleSequenceNumber\":89474,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":1725000,\"moneyMax\":6468750,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"67.0.6.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"harakiri-sushi\":[0,0,7147,0]},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":26776.039672199717,\"onlineMoneyMade\":0,\"onlineRunningTime\":75094.0099998133,\"pid\":518,\"ramUsage\":1.75,\"server\":\"joesguns\",\"threads\":7,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"harakiri-sushi\":[0,0,0,897]},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3360.5859221999517,\"onlineMoneyMade\":0,\"onlineRunningTime\":75090.80999981334,\"pid\":519,\"ramUsage\":1.75,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.grow(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.sleep(ns.getWeakenTime(\\\"harakiri-sushi\\\") + 1000);\\n\\t}\\n}\",\"filename\":\"manual.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"manual.js\",\"url\":\"blob:https://danielyxie.github.io/f8034085-537a-49b7-8dd9-3ee882a36620\",\"moduleSequenceNumber\":83686}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"joesguns\",\"_hash\":\"8582014887ad8bf0420245e210b1b3544bd79cafff003ec7476115e912713dd1\",\"moduleSequenceNumber\":83686,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.grow(\\\"harakiri-sushi\\\");\\n\\t}\\n}\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:https://danielyxie.github.io/5e07e1ec-3552-493a-bbe8-5eec87d47555\",\"moduleSequenceNumber\":84352}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"_hash\":\"d0a720840f7ef16bd5460d76bc9f1aedb261402bf5392b4ae46b89cf3467b4de\",\"moduleSequenceNumber\":84352,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t}\\n}\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:https://danielyxie.github.io/605281ba-e770-4357-9721-e33684e6b731\",\"moduleSequenceNumber\":84353}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"joesguns\",\"_hash\":\"e9895aad2280d85c50a1782bf333aef151e06a23234cd5cdc7b59d83eaed1674\",\"moduleSequenceNumber\":84353,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":13.597999999999967,\"minDifficulty\":5,\"moneyAvailable\":1896051.8675978843,\"moneyMax\":7031250,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-844096.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[107,117,156,168],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"21.4.7.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":26.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":26111.97740384894,\"onlineMoneyMade\":20835000,\"onlineRunningTime\":74746.40999981944,\"pid\":668,\"ramUsage\":5.5,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2324],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571467,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84665}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2324],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571468,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84666}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2324],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571469,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84667}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2325],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571518,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84665}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2325],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571519,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84666}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2325],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571520,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84667}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2326],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571569,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84665}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,2326],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571570,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84666}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,2326],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571571,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84667}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2327],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572025,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84665}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2327],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572026,\"ramUsage\":1.75,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84666}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2327],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572027,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84667}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":84664}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"zer0\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":84664,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84666}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":84666,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84667}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zer0\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":84667,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84665}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"zer0\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":84665,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"neo-net\",\"silver-helix\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5625000,\"moneyMax\":21093750,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"17.0.5.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"harakiri-sushi\":[0,0,0,7168]},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":26854.715596799615,\"onlineMoneyMade\":0,\"onlineRunningTime\":74891.20999981694,\"pid\":587,\"ramUsage\":1.75,\"server\":\"nectar-net\",\"threads\":8,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t}\\n}\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:https://danielyxie.github.io/605281ba-e770-4357-9721-e33684e6b731\",\"moduleSequenceNumber\":84543}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"nectar-net\",\"_hash\":\"e9895aad2280d85c50a1782bf333aef151e06a23234cd5cdc7b59d83eaed1674\",\"moduleSequenceNumber\":84543,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"sigma-cosmetics\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2062500,\"moneyMax\":7734375,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"74.5.7.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":21.099999999999998,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":26097.928131598943,\"onlineMoneyMade\":20841562,\"onlineRunningTime\":74736.20999981958,\"pid\":681,\"ramUsage\":5.5,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2323],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571497,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84669}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2323],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571498,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84670}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2323],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571499,\"ramUsage\":1.7,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84671}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2324],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571548,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84669}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2324],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571549,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84670}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2324],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571550,\"ramUsage\":1.7,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84671}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2325],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571599,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84669}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,2325],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571600,\"ramUsage\":1.75,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84670}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,2325],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571601,\"ramUsage\":1.7,\"server\":\"neo-net\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84671}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":84668}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"neo-net\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":84668,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84670}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":84670,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84671}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"neo-net\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":84671,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84669}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"neo-net\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":84669,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zer0\",\"the-hub\",\"netlink\",\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":3750000,\"moneyMax\":14062500,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"20.6.1.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":57.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":52297.011023416744,\"onlineMoneyMade\":42481125,\"onlineRunningTime\":68604.60999991819,\"pid\":9678,\"ramUsage\":5.5,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4653],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571455,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,4653],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571456,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,4653],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571457,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4654],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571506,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,4654],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571507,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,4654],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571508,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4655],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571557,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,4655],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571558,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,4655],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571559,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4656],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571608,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,4656],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571609,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,4656],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571610,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4657],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571644,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,4657],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571645,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,4657],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571646,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4658],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571680,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,4658],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571681,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,4658],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571682,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4659],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571716,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,4659],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571717,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,4659],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571718,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4660],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571752,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,4660],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571753,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,4660],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571754,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4661],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571788,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,4661],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571789,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,4661],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571790,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,4662],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572019,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,4662],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572020,\"ramUsage\":1.75,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,4662],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572021,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":88204}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"silver-helix\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":88204,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88206}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":88206,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88207}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"silver-helix\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":88207,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88205}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"silver-helix\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":88205,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zer0\",\"comptek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":33750000,\"moneyMax\":126562500,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"53.7.7.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":14,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"harakiri-sushi\":[0,0,7140,0]},\"filename\":\"grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":26749.814363999718,\"onlineMoneyMade\":0,\"onlineRunningTime\":75077.80999981357,\"pid\":520,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"threads\":7,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{\"harakiri-sushi\":[0,0,0,897]},\"filename\":\"weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3360.5859221999517,\"onlineMoneyMade\":0,\"onlineRunningTime\":75074.80999981363,\"pid\":521,\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.grow(\\\"harakiri-sushi\\\");\\n\\t\\tawait ns.sleep(ns.getWeakenTime(\\\"harakiri-sushi\\\") + 1000);\\n\\t}\\n}\",\"filename\":\"manual.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"manual.js\",\"url\":\"blob:https://danielyxie.github.io/f8034085-537a-49b7-8dd9-3ee882a36620\",\"moduleSequenceNumber\":83687}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"hong-fang-tea\",\"_hash\":\"8582014887ad8bf0420245e210b1b3544bd79cafff003ec7476115e912713dd1\",\"moduleSequenceNumber\":83687,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.grow(\\\"harakiri-sushi\\\");\\n\\t}\\n}\",\"filename\":\"grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"grow.js\",\"url\":\"blob:https://danielyxie.github.io/5e07e1ec-3552-493a-bbe8-5eec87d47555\",\"moduleSequenceNumber\":84400}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"_hash\":\"d0a720840f7ef16bd5460d76bc9f1aedb261402bf5392b4ae46b89cf3467b4de\",\"moduleSequenceNumber\":84400,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.weaken(\\\"harakiri-sushi\\\");\\n\\t}\\n}\",\"filename\":\"weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"weaken.js\",\"url\":\"blob:https://danielyxie.github.io/605281ba-e770-4357-9721-e33684e6b731\",\"moduleSequenceNumber\":84401}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"hong-fang-tea\",\"_hash\":\"e9895aad2280d85c50a1782bf333aef151e06a23234cd5cdc7b59d83eaed1674\",\"moduleSequenceNumber\":84401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\",\"zer0\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2250000,\"moneyMax\":8437500,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"95.3.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":11250000,\"moneyMax\":11250000,\"numOpenPortsRequired\":0,\"openPortCount\":4,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"30.7.5.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":26.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":23636.495633399052,\"onlineMoneyMade\":19210162,\"onlineRunningTime\":68587.80999991852,\"pid\":9718,\"ramUsage\":5.5,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2103],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571473,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88209}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2103],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571474,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88210}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2103],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571475,\"ramUsage\":1.7,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88211}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2104],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571524,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88209}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2104],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571525,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88210}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2104],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571526,\"ramUsage\":1.7,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88211}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2105],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571575,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88209}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,2105],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571576,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88210}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,2105],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571577,\"ramUsage\":1.7,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88211}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2106],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572028,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88209}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2106],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572029,\"ramUsage\":1.75,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88210}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2106],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572030,\"ramUsage\":1.7,\"server\":\"phantasy\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88211}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":88208}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"phantasy\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":88208,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88210}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":88210,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88211}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"phantasy\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":88211,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88209}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"phantasy\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":88209,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"zer0\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7,\"minDifficulty\":7,\"moneyAvailable\":67409818,\"moneyMax\":67500000,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"0.8.1.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":26.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":26089.498568248942,\"onlineMoneyMade\":20841282,\"onlineRunningTime\":74651.20999982073,\"pid\":836,\"ramUsage\":5.5,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2322],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571464,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2322],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571465,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84796}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2322],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571466,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84797}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2323],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571515,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2323],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571516,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84796}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2323],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571517,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84797}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2324],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571566,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,2324],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571567,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84796}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,2324],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571568,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84797}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2325],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572022,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84795}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2325],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572023,\"ramUsage\":1.75,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84796}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2325],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572024,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84797}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":84794}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"max-hardware\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":84794,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":84797}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"max-hardware\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":84797,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":84796}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":84796,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":84795}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"max-hardware\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":84795,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"hong-fang-tea\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":7500000,\"moneyMax\":28125000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"78.8.9.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"max-hardware\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":34,\"hackDifficulty\":34,\"minDifficulty\":11,\"moneyAvailable\":45475145.25,\"moneyMax\":170531794.6875,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":205,\"serverGrowth\":33}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"66.7.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":40,\"minDifficulty\":13,\"moneyAvailable\":44792177.25,\"moneyMax\":167970664.6875,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":241,\"serverGrowth\":28}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"82.7.7.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":26.3,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":25892.808756748953,\"onlineMoneyMade\":20804966,\"onlineRunningTime\":74099.00999982817,\"pid\":1714,\"ramUsage\":5.5,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2304],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571461,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":85339}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2304],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571462,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":85340}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2304],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571463,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":85341}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2305],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571512,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":85339}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2305],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571513,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":85340}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2305],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571514,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":85341}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2306],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571563,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":85339}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,2306],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571564,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":85340}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,2306],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571565,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":85341}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,2307],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572016,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":85339}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,2307],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572017,\"ramUsage\":1.75,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":85340}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,2307],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572018,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":85341}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":85338}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"iron-gym\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":85338,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":85341}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"iron-gym\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":85341,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":85340}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":85340,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":85339}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"iron-gym\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":85339,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":15000000,\"moneyMax\":56250000,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"46.4.0.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"summit-uni\",\"galactic-cyber\",\"aerocorp\",\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":187500000,\"moneyMax\":703125000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":507,\"serverGrowth\":36}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"19.0.4.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"4sigma\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":675000000,\"moneyMax\":2531250000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1048,\"serverGrowth\":57}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"15.6.3.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"lexo-corp\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":48,\"hackDifficulty\":48,\"minDifficulty\":16,\"moneyAvailable\":337500000,\"moneyMax\":1265625000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":796,\"serverGrowth\":56}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"36.9.1.7\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\",\"fulcrumtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":535,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"89.6.0.3\",\"isConnectedTo\":true,\"maxRam\":256,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"johnson-ortho\",\"lexo-corp\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":363,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"17.8.1.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"avmnite-02h\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":89881,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":4,\"requiredHackingSkill\":203,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"51.0.8.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":519,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"79.4.6.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ram = 256;\\n\\tvar startfiles = [\\\"/newserver/start.js\\\", \\\"/newserver/hack.js\\\", \\\"/newserver/grow.js\\\", \\\"/newserver/weaken.js\\\"];\\n\\tvar servername = \\\"\\\";\\n\\tns.tprint(\\\"Purchasing servers for $\\\" + (ns.getPurchasedServerCost(ram) / 1000000) + \\\" mil each\\\");\\n\\tvar i = 0;\\n\\twhile (i < ns.getPurchasedServerLimit()) {\\n\\t\\tif (ns.getServerMoneyAvailable(\\\"home\\\") > ns.getPurchasedServerCost(ram)) {\\n\\t\\t\\tservername = ns.purchaseServer(\\\"foo-\\\" + i, ram);\\n\\t\\t\\tawait ns.scp(startfiles, servername);\\n\\t\\t\\tns.exec(\\\"/newserver/start.js\\\", servername, 1, \\\"harakiri-sushi\\\");\\n\\t\\t\\t++i;\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(2000);\\n\\t}\\n}\",\"filename\":\"early-purchase-server.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"early-purchase-server.js\",\"url\":\"blob:https://danielyxie.github.io/7b54392b-f207-46bc-ac30-d88d70151063\",\"moduleSequenceNumber\":88647}],\"dependents\":[],\"ramUsage\":6.15,\"server\":\"CSEC\",\"_hash\":\"436744ff0f1bd8c3d38afc66bf82e1278341bab296cbe21c22cf70b1376cab2d\",\"moduleSequenceNumber\":88647,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"CSEC\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":88722,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":88798,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"CSEC\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":88800,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"CSEC\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":88802,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"hong-fang-tea\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":4,\"requiredHackingSkill\":56,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-952832-NiteSec.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a(((a\",\"reward\":{\"name\":\"NiteSec\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"61.2.6.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"21.5.6.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":9000,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"56.5.6.8\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":4,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-0\",\"httpPortOpen\":false,\"ip\":\"61.0.6.2\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":88.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":122115.41716325186,\"onlineMoneyMade\":348117392,\"onlineRunningTime\":68099.40999992786,\"pid\":11531,\"ramUsage\":5.5,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,8994],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571443,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,8994],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571444,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,8994],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571445,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,8995],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571494,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,8995],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571495,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,8995],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571496,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,8996],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571545,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,8996],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571546,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,8996],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571547,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,8997],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571596,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,8997],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571597,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,8997],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571598,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,8998],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571635,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,8998],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571636,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,8998],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571637,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,8999],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571671,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,8999],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571672,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,8999],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571673,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9000],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571707,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9000],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571708,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9000],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571709,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9001],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"pid\":571743,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9001],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"pid\":571744,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9001],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"pid\":571745,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9002],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571779,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9002],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571780,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9002],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571781,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9003],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571815,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9003],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571816,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9003],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571817,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9004],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571848,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9004],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571849,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9004],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571850,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9005],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571881,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9005],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571882,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9005],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571883,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9006],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571914,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9006],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571915,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9006],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571916,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9007],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571947,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9007],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571948,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9007],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571949,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9008],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571980,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9008],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571981,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9008],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571982,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,9009],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572013,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,9009],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572014,\"ramUsage\":1.75,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,9009],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572015,\"ramUsage\":1.7,\"server\":\"foo-0\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":88892}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-0\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":88892,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":88893}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-0\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":88893,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":88895}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-0\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":88895,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":88894}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-0\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":88894,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-1\",\"httpPortOpen\":false,\"ip\":\"77.1.3.8\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":88.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":107116.36840803339,\"onlineMoneyMade\":310899896,\"onlineRunningTime\":66429.80999995989,\"pid\":17247,\"ramUsage\":5.5,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":90628}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7887],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571440,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7887],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571441,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7887],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571442,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7888],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571491,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7888],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571492,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7888],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571493,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7889],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571542,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7889],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571543,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7889],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571544,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7890],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571593,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7890],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571594,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7890],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571595,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7891],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571632,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7891],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571633,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7891],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571634,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7892],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571668,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7892],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571669,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7892],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571670,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7893],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571704,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7893],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571705,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7893],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571706,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7894],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"pid\":571740,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7894],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"pid\":571741,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7894],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.410000000000002,\"pid\":571742,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7895],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571776,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7895],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571777,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7895],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571778,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7896],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571812,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7896],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571813,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7896],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571814,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7897],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571845,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7897],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571846,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7897],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571847,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7898],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571878,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7898],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571879,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7898],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571880,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7899],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571911,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7899],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571912,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7899],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571913,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7900],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571944,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7900],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571945,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7900],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571946,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7901],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571977,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7901],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571978,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7901],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571979,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",0,7902],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572010,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",16984,7902],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572011,\"ramUsage\":1.75,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",63777,7902],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572012,\"ramUsage\":1.7,\"server\":\"foo-1\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":90628}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-1\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":90628,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":90631}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-1\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":90631,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":90630}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-1\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":90630,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":90629}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-1\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":90629,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-2\",\"httpPortOpen\":false,\"ip\":\"46.6.1.8\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":88.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":202219.60505775566,\"onlineMoneyMade\":165156843,\"onlineRunningTime\":65464.009999978276,\"pid\":22885,\"ramUsage\":5.5,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17992],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571458,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17992],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571459,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17992],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571460,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17993],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571509,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17993],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571510,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17993],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571511,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17994],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571560,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17994],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571561,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17994],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571562,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17995],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571611,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17995],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571612,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17995],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571613,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17996],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571647,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17996],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571648,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17996],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571649,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17997],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571683,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17997],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571684,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17997],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571685,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17998],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571719,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17998],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571720,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17998],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571721,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17999],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571755,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17999],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571756,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17999],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571757,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,18000],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571791,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,18000],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571792,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,18000],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571793,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,18001],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571824,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,18001],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571825,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,18001],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571826,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,18002],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571857,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,18002],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571858,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,18002],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571859,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,18003],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571890,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,18003],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571891,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,18003],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571892,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,18004],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571923,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,18004],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571924,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,18004],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571925,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,18005],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571956,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,18005],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571957,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,18005],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571958,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,18006],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571989,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,18006],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571990,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,18006],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571991,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,18007],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572037,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,18007],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572038,\"ramUsage\":1.75,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,18007],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572039,\"ramUsage\":1.7,\"server\":\"foo-2\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":92102}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-2\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":92102,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92105}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-2\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":92105,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92104}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-2\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":92104,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92103}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-2\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":92103,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-3\",\"httpPortOpen\":false,\"ip\":\"93.0.0.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":88.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":197622.6831775514,\"onlineMoneyMade\":161563543,\"onlineRunningTime\":64939.809999988254,\"pid\":27650,\"ramUsage\":5.5,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17583],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571452,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17583],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571453,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17583],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571454,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17584],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571503,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17584],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571504,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17584],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571505,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17585],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571554,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17585],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571555,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17585],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571556,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17586],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571605,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17586],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571606,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17586],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571607,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17587],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571641,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17587],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571642,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17587],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571643,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17588],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571677,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17588],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571678,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17588],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571679,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17589],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571713,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17589],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571714,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17589],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571715,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17590],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571749,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17590],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571750,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17590],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571751,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17591],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571785,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17591],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571786,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17591],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571787,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17592],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571821,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17592],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571822,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17592],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571823,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17593],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571854,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17593],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571855,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17593],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571856,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17594],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571887,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17594],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571888,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17594],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571889,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17595],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571920,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17595],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571921,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17595],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571922,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17596],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571953,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17596],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571954,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17596],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571955,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17597],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571986,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17597],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571987,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17597],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571988,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17598],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572034,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17598],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572035,\"ramUsage\":1.75,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17598],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572036,\"ramUsage\":1.7,\"server\":\"foo-3\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":92924}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-3\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":92924,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":92927}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-3\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":92927,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":92926}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-3\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":92926,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":92925}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-3\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":92925,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-4\",\"httpPortOpen\":false,\"ip\":\"98.8.6.7\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":83.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":193598.97160514767,\"onlineMoneyMade\":158406301,\"onlineRunningTime\":64541.20999999058,\"pid\":32322,\"ramUsage\":5.5,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17225],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571485,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17225],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571486,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17225],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571487,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17226],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571536,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17226],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571537,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17226],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571538,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17227],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571587,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17227],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571588,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17227],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571589,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17228],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571626,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17228],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571627,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17228],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571628,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17229],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571662,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17229],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571663,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17229],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571664,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17230],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571698,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17230],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571699,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17230],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571700,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17231],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571734,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17231],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571735,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17231],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571736,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17232],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571770,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17232],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571771,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17232],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571772,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17233],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571806,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17233],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571807,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17233],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571808,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17234],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571839,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17234],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571840,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17234],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571841,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17235],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571872,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17235],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571873,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17235],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571874,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17236],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571905,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17236],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571906,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17236],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571907,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17237],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571938,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17237],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571939,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17237],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571940,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17238],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571971,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,17238],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571972,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,17238],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571973,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,17239],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572004,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,17239],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572005,\"ramUsage\":1.75,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,17239],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572006,\"ramUsage\":1.7,\"server\":\"foo-4\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":93500}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-4\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":93500,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":93503}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-4\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":93503,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":93502}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-4\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":93502,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":93501}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-4\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":93501,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-5\",\"httpPortOpen\":false,\"ip\":\"52.6.1.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":83.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":190204.66742954453,\"onlineMoneyMade\":155752229,\"onlineRunningTime\":64192.209999995255,\"pid\":37312,\"ramUsage\":5.5,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16923],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571482,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16923],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571483,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16923],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571484,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16924],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571533,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16924],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571534,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16924],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571535,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16925],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571584,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16925],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571585,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16925],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571586,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16926],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571623,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16926],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571624,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16926],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571625,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16927],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571659,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16927],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571660,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16927],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571661,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16928],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571695,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16928],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571696,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16928],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571697,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16929],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571731,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16929],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571732,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16929],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571733,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16930],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571767,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16930],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571768,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16930],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571769,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16931],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571803,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16931],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571804,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16931],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571805,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16932],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571836,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16932],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571837,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16932],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571838,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16933],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571869,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16933],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571870,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16933],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571871,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16934],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571902,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16934],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571903,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16934],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571904,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16935],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571935,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16935],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571936,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16935],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571937,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16936],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571968,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16936],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571969,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16936],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571970,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16937],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572001,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16937],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572002,\"ramUsage\":1.75,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16937],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572003,\"ramUsage\":1.7,\"server\":\"foo-5\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":94100}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-5\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":94100,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94103}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-5\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":94103,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94102}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-5\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":94102,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94101}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-5\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":94101,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-6\",\"httpPortOpen\":false,\"ip\":\"40.3.8.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":83.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":187293.65821934183,\"onlineMoneyMade\":153463451,\"onlineRunningTime\":63859.21000000123,\"pid\":42527,\"ramUsage\":5.5,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16664],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571488,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16664],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571489,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16664],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571490,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16665],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571539,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16665],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571540,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16665],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571541,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16666],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571590,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16666],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571591,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16666],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571592,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16667],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571629,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16667],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571630,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16667],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571631,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16668],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571665,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16668],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571666,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16668],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571667,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16669],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571701,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16669],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571702,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16669],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571703,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16670],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571737,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16670],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571738,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16670],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571739,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16671],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571773,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16671],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571774,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16671],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571775,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16672],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571809,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16672],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571810,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16672],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571811,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16673],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571842,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16673],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571843,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16673],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571844,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16674],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571875,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16674],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571876,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16674],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571877,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16675],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571908,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16675],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571909,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16675],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571910,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16676],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571941,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16676],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571942,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16676],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571943,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16677],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571974,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16677],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571975,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16677],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571976,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16678],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572007,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16678],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572008,\"ramUsage\":1.75,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16678],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572009,\"ramUsage\":1.7,\"server\":\"foo-6\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":94724}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-6\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":94724,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":94727}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-6\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":94727,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":94726}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-6\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":94726,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":94725}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-6\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":94725,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-7\",\"httpPortOpen\":false,\"ip\":\"70.9.8.2\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":83.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":184820.98630333954,\"onlineMoneyMade\":151515090,\"onlineRunningTime\":63612.21000000567,\"pid\":47640,\"ramUsage\":5.5,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16444],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571479,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16444],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571480,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16444],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571481,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16445],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571530,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16445],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571531,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16445],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571532,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16446],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571581,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16446],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571582,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16446],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571583,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16447],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571620,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16447],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571621,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16447],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571622,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16448],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571656,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16448],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571657,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16448],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571658,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16449],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571692,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16449],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571693,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16449],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571694,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16450],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571728,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16450],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571729,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16450],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571730,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16451],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571764,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16451],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571765,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16451],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571766,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16452],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571800,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16452],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571801,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16452],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.410000000000001,\"pid\":571802,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16453],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571833,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16453],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571834,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16453],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571835,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16454],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571866,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16454],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571867,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16454],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571868,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16455],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571899,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16455],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571900,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16455],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571901,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16456],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571932,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16456],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571933,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16456],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571934,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16457],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571965,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16457],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571966,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16457],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571967,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16458],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":571998,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16458],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":571999,\"ramUsage\":1.75,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16458],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":572000,\"ramUsage\":1.7,\"server\":\"foo-7\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":95160}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-7\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":95160,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95163}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-7\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":95163,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95162}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-7\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":95162,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95161}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-7\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":95161,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-8\",\"httpPortOpen\":false,\"ip\":\"49.3.8.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":83.5,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":182370.79322293727,\"onlineMoneyMade\":149582251,\"onlineRunningTime\":63377.01000000991,\"pid\":53017,\"ramUsage\":5.5,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16226],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571476,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16226],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571477,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16226],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571478,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16227],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571527,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16227],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571528,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16227],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.010000000000004,\"pid\":571529,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16228],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571578,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16228],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571579,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16228],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571580,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16229],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571617,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16229],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571618,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16229],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571619,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16230],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571653,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16230],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571654,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16230],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571655,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16231],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571689,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16231],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571690,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16231],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571691,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16232],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571725,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16232],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571726,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16232],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571727,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16233],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571761,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16233],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571762,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16233],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571763,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16234],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571797,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16234],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571798,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16234],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571799,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16235],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571830,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16235],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571831,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16235],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571832,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16236],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571863,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16236],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571864,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16236],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.41,\"pid\":571865,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16237],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571896,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16237],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571897,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16237],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571898,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16238],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571929,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16238],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571930,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16238],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.41,\"pid\":571931,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16239],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571962,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16239],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571963,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16239],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571964,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16240],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":571995,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16240],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":571996,\"ramUsage\":1.75,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16240],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.41000000000000003,\"pid\":571997,\"ramUsage\":1.7,\"server\":\"foo-8\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":95612}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-8\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":95612,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":95615}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-8\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":95615,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":95614}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-8\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":95614,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":95613}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-8\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":95613,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"foo-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"foo-9\",\"httpPortOpen\":false,\"ip\":\"13.6.3.2\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":88.7,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{},\"filename\":\"/newserver/start.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":180021.7549027351,\"onlineMoneyMade\":147732403,\"onlineRunningTime\":63161.81000001384,\"pid\":58733,\"ramUsage\":5.5,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16017],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571449,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16017],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571450,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16017],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2180.4099999999935,\"pid\":571451,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16018],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571500,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16018],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571501,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16018],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":7.210000000000004,\"pid\":571502,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16019],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571551,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16019],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571552,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16019],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.610000000000004,\"pid\":571553,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16020],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571602,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16020],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571603,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16020],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":6.010000000000003,\"pid\":571604,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16021],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571638,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16021],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571639,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16021],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.610000000000003,\"pid\":571640,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16022],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571674,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16022],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571675,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16022],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":5.0100000000000025,\"pid\":571676,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16023],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571710,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16023],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571711,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16023],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.610000000000002,\"pid\":571712,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16024],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571746,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16024],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571747,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16024],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":4.010000000000002,\"pid\":571748,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16025],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571782,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16025],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571783,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16025],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.610000000000001,\"pid\":571784,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16026],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571818,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16026],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571819,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16026],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":3.0100000000000007,\"pid\":571820,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16027],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571851,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16027],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571852,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16027],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.6100000000000003,\"pid\":571853,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16028],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571884,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16028],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571885,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16028],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":2.01,\"pid\":571886,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16029],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571917,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16029],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571918,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16029],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.6099999999999999,\"pid\":571919,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16030],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571950,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7567,16030],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571951,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28466,16030],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1.01,\"pid\":571952,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16031],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571983,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16031],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571984,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16031],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.6100000000000001,\"pid\":571985,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",0,16032],\"dataMap\":{},\"filename\":\"/newserver/weaken.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572031,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",7521,16032],\"dataMap\":{},\"filename\":\"/newserver/grow.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572032,\"ramUsage\":1.75,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",28290,16032],\"dataMap\":{},\"filename\":\"/newserver/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":0.01,\"pid\":572033,\"ramUsage\":1.7,\"server\":\"foo-9\",\"threads\":1,\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"getServerUsedRam\\\");\\n\\tvar hackServer = ns.args[0];\\n\\tvar hostServer = ns.getHostname();\\n\\tvar hackscriptRam = ns.getScriptRam(\\\"/newserver/hack.js\\\");\\n\\tvar growscriptRam = ns.getScriptRam(\\\"/newserver/grow.js\\\");\\n\\tvar weakenscriptRam = ns.getScriptRam(\\\"/newserver/weaken.js\\\");\\n\\tvar maxRam = ns.getServerMaxRam(hostServer) - ns.getServerUsedRam(hostServer);\\n\\tvar HackTime = 0;\\n\\tvar GrowTime = 0;\\n\\tvar WeakenTime = 0;\\n\\tvar hackfactor = 0;\\n\\tvar growthreads = 0;\\n\\tvar runSleep = 500;\\n\\tvar gsleep = 0;\\n\\tvar hsleep = 0;\\n\\t//ram per run\\n\\tvar totalRamPerRun = 0;\\n\\t//run\\n\\tvar i = 0;\\n\\twhile (true) {\\n\\t\\t//update server time stats\\n\\t\\tHackTime = Math.ceil(ns.getHackTime(hackServer));\\n\\t\\tGrowTime = Math.ceil(ns.getGrowTime(hackServer));\\n\\t\\tWeakenTime = Math.ceil(ns.getWeakenTime(hackServer));\\n\\t\\t//calculate grow threads for 1 hack thread\\n\\t\\thackfactor = ns.hackAnalyze(hackServer) + 1;\\n\\t\\tgrowthreads = Math.ceil(ns.growthAnalyze(hackServer, hackfactor));\\n\\t\\t//calculate sleeps\\n\\t\\tgsleep = (WeakenTime - GrowTime - 50); //sleep time for grow to beat weaken\\n\\t\\thsleep = (WeakenTime - HackTime - 100); //sleep time for hack to beat grow\\n\\t\\t//start runs, sleep if not enough ram\\n\\t\\ttotalRamPerRun = (hackscriptRam * 1) + (growscriptRam * growthreads) + (weakenscriptRam * 1);\\n\\t\\tif ((maxRam - ns.getServerUsedRam(hostServer)) > totalRamPerRun) {\\n\\t\\t\\tns.getServerMoneyAvailable(hackServer);\\n\\t\\t\\tns.getServerSecurityLevel(hackServer);\\n\\t\\t\\tns.exec('/newserver/weaken.js', hostServer, Math.ceil((growthreads * 0.004 + 0.002) / 0.05), hackServer, 0, i);\\n\\t\\t\\tns.exec('/newserver/grow.js', hostServer, growthreads, hackServer, gsleep, i);\\n\\t\\t\\tns.exec('/newserver/hack.js', hostServer, 1, hackServer, hsleep, i);\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t\\tawait ns.sleep(runSleep);\\n\\t}\\n}\",\"filename\":\"/newserver/start.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/start.js\",\"url\":\"blob:https://danielyxie.github.io/bfab5731-ea22-4cc8-b69b-ad439e79f793\",\"moduleSequenceNumber\":96080}],\"dependents\":[],\"ramUsage\":5.5,\"server\":\"foo-9\",\"_hash\":\"e5aac8458cdfc62c29f257b406ac19ba854a5b097a03c963aa5017a426da1a2e\",\"moduleSequenceNumber\":96080,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getGrowTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getWeakenTime\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"hackAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"growthAnalyze\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.hack(server);\\n}\",\"filename\":\"/newserver/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/hack.js\",\"url\":\"blob:https://danielyxie.github.io/25eb9562-dee5-4459-b242-5130b23356dd\",\"moduleSequenceNumber\":96083}],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foo-9\",\"_hash\":\"e88937cda15804591f0efba5cb46d0fce4f48b0c9b679212e2ad87d479fe1331\",\"moduleSequenceNumber\":96083,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.grow(server);\\n}\",\"filename\":\"/newserver/grow.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/grow.js\",\"url\":\"blob:https://danielyxie.github.io/ba52825c-e4a0-4010-be53-d07986fefa22\",\"moduleSequenceNumber\":96082}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-9\",\"_hash\":\"b7b6bdd2286fcd6e330377df5c261a1f0f56ff11852afe5b6fe8f22f47e6c68d\",\"moduleSequenceNumber\":96082,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar server = ns.args[0];\\n\\tvar sleeptime = ns.args[1];\\n\\tawait ns.sleep(sleeptime);\\n\\tawait ns.weaken(server);\\n}\",\"filename\":\"/newserver/weaken.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/newserver/weaken.js\",\"url\":\"blob:https://danielyxie.github.io/5b724b30-c79e-4bf9-834a-b389ec814dab\",\"moduleSequenceNumber\":96081}],\"dependents\":[],\"ramUsage\":1.75,\"server\":\"foo-9\",\"_hash\":\"af49f94fcd3d0b52f9e8353830b3214213f9e3be359bcdd222f9bb87a9464d71\",\"moduleSequenceNumber\":96081,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":0.2470123333333333}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":62.1801,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":76395.56757844605}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":4.8825,\"isBanned\":false,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":4.7347,\"isBanned\":false,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":4.8815,\"isBanned\":false,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":13.9296,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":47.5313,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":16021.542077864155}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":19.5552,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":7314.755429052304}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{\"RootAccessor\":\"run RootAccessor.js\"}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":false}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":false}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"lastUpdate\":0,\"Orders\":{},\"storedCycles\":0,\"ticksUntilCycle\":0}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":10,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":20,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":18,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#E0E0BC\",\"primary\":\"#CCCCAE\",\"primarydark\":\"#B8B89C\",\"successlight\":\"#00F000\",\"success\":\"#00D200\",\"successdark\":\"#00B400\",\"errorlight\":\"#F00000\",\"error\":\"#C80000\",\"errordark\":\"#A00000\",\"secondarylight\":\"#B4AEAE\",\"secondary\":\"#969090\",\"secondarydark\":\"#787272\",\"warninglight\":\"#F0F000\",\"warning\":\"#C8C800\",\"warningdark\":\"#A0A000\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#1E1E1E\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#1E1E1E\",\"backgroundsecondary\":\"#252525\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-1,\"y\":0,\"opened\":true}}","VersionSave":"10","AllGangsSave":"","LastExportBonus":"1642676830279","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1642753513336"}}